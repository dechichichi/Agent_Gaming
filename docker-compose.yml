version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: agent_gaming_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: agent_gaming
      MYSQL_USER: agent_user
      MYSQL_PASSWORD: agent_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - agent_gaming_network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: agent_gaming_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agent_gaming_network

  # 应用服务
  app:
    build: .
    container_name: agent_gaming_app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=agent_user
      - DB_PASSWORD=agent_password
      - DB_NAME=agent_gaming
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=info
      - JWT_SECRET=your-secret-key-change-in-production
    depends_on:
      - mysql
      - redis
    volumes:
      - ./logs:/root/logs
    networks:
      - agent_gaming_network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: agent_gaming_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - agent_gaming_network

volumes:
  mysql_data:
  redis_data:

networks:
  agent_gaming_network:
    driver: bridge 